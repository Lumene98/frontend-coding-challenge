import React, { useCallback, useEffect, useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styled from "styled-components";
import {
  fetchAndResolveRelationships,
  Store,
} from "../services/bookstore.service";
import Bookstore from "../components/Bookstore";

const Container = styled.div`
  padding: 0 0.5rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
`;

const Main = styled.main`
  padding: 5rem 0;
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;

  @media (min-width: 1500px) {
    width: 50%;
  }
`;

const BookstoresContainer = styled.div`
  display: flex;
  flex-direction: column;
  width: 100%;
  padding-top: 3rem;
`;

const Home: NextPage = () => {
  const [stores, setStores] = useState<Store[]>([]);

  useEffect(() => {
    const _fetchstores = async () => {
      const stores = await fetchAndResolveRelationships();
      setStores(stores);
    };

    _fetchstores();
  }, []);

  return (
    <Container>
      <Head>
        <title>Frontend coding challenge</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Main>
        <BookstoresContainer>
          {stores &&
            stores.map((store, key) => (
              <Bookstore
                store={store}
                delay={`${Number(key) / 4}s`}
                key={key}
              />
            ))}
        </BookstoresContainer>
      </Main>
    </Container>
  );
};

export default Home;
